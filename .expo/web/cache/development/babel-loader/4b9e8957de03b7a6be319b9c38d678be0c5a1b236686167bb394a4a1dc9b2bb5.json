{"ast":null,"code":"import React from \"react\";\nimport { NativeBaseProvider, Center, Heading, VStack, FormControl, HStack, Text, Input, Link, Button, Box } from \"native-base\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(NativeBaseProvider, {\n    children: _jsx(Center, {\n      w: \"100%\",\n      children: _jsxs(Box, {\n        safeArea: true,\n        p: \"2\",\n        py: \"8\",\n        w: \"90%\",\n        maxW: \"290\",\n        children: [_jsx(Heading, {\n          size: \"lg\",\n          fontWeight: \"600\",\n          color: \"coolGray.800\",\n          _dark: {\n            color: \"warmGray.50\"\n          },\n          children: \"Bem vindo!\"\n        }), _jsx(Heading, {\n          mt: \"1\",\n          _dark: {\n            color: \"warmGray.200\"\n          },\n          color: \"coolGray.600\",\n          fontWeight: \"medium\",\n          size: \"xs\",\n          children: \"Entre para continuar!\"\n        }), _jsxs(VStack, {\n          space: 3,\n          mt: \"5\",\n          children: [_jsxs(FormControl, {\n            isRequired: true,\n            children: [_jsx(FormControl.Label, {\n              children: \"Email\"\n            }), _jsx(Input, {})]\n          }), _jsxs(FormControl, {\n            isRequired: true,\n            children: [_jsx(FormControl.Label, {\n              children: \"Senha\"\n            }), _jsx(Input, {\n              type: \"password\"\n            }), _jsx(Link, {\n              _text: {\n                fontSize: \"xs\",\n                fontWeight: \"500\",\n                color: \"#FF9D0A\"\n              },\n              alignSelf: \"flex-end\",\n              mt: \"1\",\n              children: \"Esqueceu a senha?\"\n            })]\n          }), _jsx(Button, {\n            onPress: function onPress() {\n              return navigation.navigate('MainAction');\n            },\n            mt: \"2\",\n            colorScheme: \"orange\",\n            children: \"Entrar\"\n          }), _jsxs(HStack, {\n            mt: \"6\",\n            justifyContent: \"center\",\n            children: [_jsxs(Text, {\n              fontSize: \"sm\",\n              color: \"coolGray.600\",\n              _dark: {\n                color: \"warmGray.200\"\n              },\n              children: [\"Sou novo aqui.\", \" \"]\n            }), _jsx(Link, {\n              onPress: function onPress() {\n                return navigation.navigate('SignUp');\n              },\n              _text: {\n                color: \"#FF9D0A\",\n                fontWeight: \"medium\",\n                fontSize: \"sm\"\n              },\n              children: \"Cadastrar\"\n            })]\n          })]\n        })]\n      })\n    })\n  });\n}\n;","map":{"version":3,"names":["React","NativeBaseProvider","Center","Heading","VStack","FormControl","HStack","Text","Input","Link","Button","Box","jsx","_jsx","jsxs","_jsxs","Login","_ref","navigation","children","w","safeArea","p","py","maxW","size","fontWeight","color","_dark","mt","space","isRequired","Label","type","_text","fontSize","alignSelf","onPress","navigate","colorScheme","justifyContent"],"sources":["/Users/juaj/Developer/puc/petconnect/Screens/loginScreen.tsx"],"sourcesContent":["import React from \"react\";\nimport { NativeBaseProvider, Center, Heading, VStack, FormControl, HStack, Text, Input, Link, Button, Box } from \"native-base\";\n\nexport default function Login({ navigation }) {\n\n    // const [emptyFields, setEmptyFields] = React.useState(true);\n    // const [email, setEmail] = React.useState(false);\n    // const [password, setPassword] = React.useState('');\n\n    // console.log({ email, password })\n\n    // if (email) setEmptyFields(false);\n\n    return <NativeBaseProvider>\n        <Center w=\"100%\">\n            <Box safeArea p=\"2\" py=\"8\" w=\"90%\" maxW=\"290\">\n                <Heading size=\"lg\" fontWeight=\"600\" color=\"coolGray.800\" _dark={{\n                    color: \"warmGray.50\"\n                }}>\n                    Bem vindo!\n                </Heading>\n                <Heading mt=\"1\" _dark={{\n                    color: \"warmGray.200\"\n                }} color=\"coolGray.600\" fontWeight=\"medium\" size=\"xs\">\n                    Entre para continuar!\n                </Heading>\n\n                <VStack space={3} mt=\"5\">\n                    <FormControl isRequired>\n                        <FormControl.Label>Email</FormControl.Label>\n                        <Input/>\n                    </FormControl>\n                    <FormControl isRequired>\n                        <FormControl.Label>Senha</FormControl.Label>\n                        <Input type=\"password\"/>\n                        <Link _text={{\n                            fontSize: \"xs\",\n                            fontWeight: \"500\",\n                            color: \"#FF9D0A\"\n                        }} alignSelf=\"flex-end\" mt=\"1\">\n                            Esqueceu a senha?\n                        </Link>\n                    </FormControl>\n                    <Button onPress={() => navigation.navigate('MainAction')} mt=\"2\" colorScheme=\"orange\">\n                        Entrar\n                    </Button>\n                    <HStack mt=\"6\" justifyContent=\"center\">\n                        <Text fontSize=\"sm\" color=\"coolGray.600\" _dark={{\n                            color: \"warmGray.200\"\n                        }}>\n                            Sou novo aqui.{\" \"}\n                        </Text>\n                        <Link onPress={() => navigation.navigate('SignUp')} _text={{\n                            color: \"#FF9D0A\",\n                            fontWeight: \"medium\",\n                            fontSize: \"sm\"\n                        }} >\n                            Cadastrar\n                        </Link>\n                    </HStack>\n                </VStack>\n            </Box>\n        </Center>\n    </NativeBaseProvider>;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}